---
title: "Parametrized Nice Reports with Quarto and PDF"
subtitle: "UseR 2024"
author: "Thomas Vroylandt, Kantiles"
format: 
  revealjs:
    theme: "assets/custom.scss"
    code-overflow: wrap
    df-print: paged
filters: [assets/bg_inverse.lua]
execute: 
  echo: true
  eval: false
  message: false
  warning: false
---

## whoami

- Founded a consultancy business : Kantiles LOGO + LINK

- Also work with R for the Rest of Us LOGO + LINK

- Creator of the `pagedreport` package LINK

- Produced 1000+ parametrized reports

**Contact me:**
[thomas@kantiles.com](mailto:thomas@kantiles.com)
[{{< iconify fa6-brands github >}}](https://github.com/tvroylandt)
[{{< iconify fa6-brands linkedin >}}](https://www.linkedin.com/in/thomas-vroylandt-9a2334190/)
[{{< fa link >}}](https://tvroylandt.github.io/personal/)

# Parametrized Reporting ?

## From one report many

:::{style="text-align: center;"}
:::{.icon-list}
{{< fa sliders size=3x >}}  {{< fa plus size=2x >}} {{< fa file size=3x >}} {{< fa plus size=2x >}} {{< fa database size=3x >}} {{< fa plus size=2x >}} {{< fa chart-simple size=3x >}} {{< fa plus size=2x >}} {{< fa comments size=3x >}}
:::
:::{.fragment}
{{< fa equals size=2x >}}
:::

:::{.fragment}
{{< fa file-pdf size=3x >}} {{< fa file-pdf size=3x >}} {{< fa file-pdf size=3x >}} {{< fa file-pdf size=3x >}} {{< fa file-pdf size=3x >}}{{< fa file-pdf size=3x >}} {{< fa file-pdf size=3x >}} {{< fa file-pdf size=3x >}} {{< fa file-pdf size=3x >}} {{< fa file-pdf size=3x >}}{{< fa file-pdf size=3x >}} {{< fa file-pdf size=3x >}} {{< fa file-pdf size=3x >}} {{< fa file-pdf size=3x >}} {{< fa file-pdf size=3x >}}{{< fa file-pdf size=3x >}}
:::
:::

## 

EXAMPLE OF PARAMETRIZED REPORTING

## 

EXAMPLE OF PARAMETRIZED REPORTING

## 

EXAMPLE OF PARAMETRIZED REPORTING

## 

EXAMPLE OF PARAMETRIZED REPORTING

## Why not a dashboard ?

:::columns
:::{.column .fragment}

**Dashboard**

- <u>Pull</u> approach

- Bring global & detailed understanding

- Interactive viz and tables

- For analysts & data practitioners

- https://

:::


:::{.column .fragment}

**Reports**

- <u>Push</u> approach

- Bring local comprehension & awareness

- Static tailored viz

- For people on the field & partners

- <u>Portable</u> Document Format (PDF)

:::
:::

# Parameters {background-image="img/music.jpg"}

## Choose your parameters

:::{layout="[1,1,1]"}
:::fragment
Areas

![](img/map.png)
:::
:::fragment
Sectors

![](img/sectors.png)
:::
:::fragment
Units

![](img/units.png)
:::
:::

:::fragment
{{< fa lightbulb >}} Combine them but check you have enough data
:::

## Put them on the header

```{yaml}
---
title: "IA2030 Country Profile"
subtitle: "`r params$country`: 2023"

# params to change here
params:
  country: "Somalia"
---
```

And re-use them with `params$XXX` :

- in code
- in inline text
- in your style

## Pass the salt

- CSS

```{css}
<style>
:root{
  --country-name: "`r params$country`";
}
</style>
```

- Typst (can be nested)

```{yaml}
---
country_name: '`r params$country`'
---
```

# Tools {background-image="img/tools.jpg"}

## Pick up a tool

Quarto + engine + R / Python ==> deeply nested

## Design your template

Depends on how much control you need

Options : 

- LaTeX (!!!)
- typst
- pagedown
- quarto.report
- weasyprint
- pagedjs-cli

Still improvments to come and a little hacky but this will progress (no pressure on Christophe)

## Quick how-to templating

Main page
Margins
Named pages
Style
Utility functions

https://www.youtube.com/watch?v=Vk5q_pvp1EE
https://github.com/tvroylandt/pagedown_rr2021

## Tips

- make section visual (named pages)
- use columns to make side-by-side comparison
- don't try to fit too many cases, sometimes if your reports are generating too much outputs, you need two templates

## Lessons

- use CSS vars
- pass content to CSS with vars (you can even parametrise images)
- think about the extreme cases
- remove some defaults
- no bootstrap
- absolute/relative positions
- negative margins + positive paddings
- child documents

# Data {background-image="img/reference.jpg"}

## Prepare your data

- Avoid as much as possible computations within the report

- Pay attention to formats - use `scales`

- Make sure your date is unique by parameter

## Check missing data

Compute explicit missing data with `tidyr::complete`

![](img/na_problem.png)






# Graphs {background-image="img/graphs.jpg"}

## Pay attention to limits

- Your graphs should work in all cases
- The more granular you go, the more extreme your values will be
- You should plot your data first

:::fragment
> {{< fa lightbulb >}} If you got this warning from `ggplot2`, you probably messed up something with limits
>
>```
>Warning message:
>Removed 7 rows containing missing values or values outside the scale range
>(`geom_point()`).
>```
:::

## Pay attention to limits

Limits can be set dynamically 

```{r}
ggplot(...) +
  ... +
  scale_x_continuous(
    breaks = seq(2021, 2023, 1),
    limits = c(min(df$year) - .1, max(df$year) + .1),
    position = "top",
    labels = c("Baseline", "2022", "2023")
  ) 
```

## Handle the size

- Output as `svg` or `svglite` (with `fig-format`)
- Setup `fig-width` and `fig-height` for all plots

:::fragment
- Size can be set dynamically (in inches)

```{r}
if(params$country == "Somalia") {
  maps_width <- 5
  maps_height <- 4
} else{
  ...
}
```

Then used in chunks with `!expr`

````{verbatim}
```{r}
#| fig-width: !expr maps_width + .5
#| fig-height: !expr maps_height
```
````
:::

## Set up a reference

:::{layout="[1,1,1]"}
:::fragment
To the global level

![](img/units_global.png)
:::
:::fragment
To others

![](img/units_others.png)
:::
:::fragment
In time

![](img/time_serie.png)
:::
:::

:::fragment
{{< fa lightbulb >}} You can pick them all
:::

## Set up a reference

![](img/ref_bar.png)

## Set up a reference

![](img/ref_others.png)

## Set up a reference

![](img/ref_time_global.png)

## Declutter & highlight

- don't label everything
- hide small values
- think about labels position
- highlight what's important

See David advices about the content LINK

https://cascadiarconf.com/2024/regular/david_keyes/
https://github.com/rfortherestofus/data-viz-parameterized-reporting

# Text {background-image="img/text.jpg"}

## Stay dynamic

- Be informative about comparisons :

  - growth
  - difference
  
- Use `glue` or `epoxy` LINK https://pkg.garrickadenbuie.com/epoxy/index.html


````{verbatim}
```{epoxy, .data=txt_data_1_3}
In {year}, measles elimination was <span class = "txt-navy">achieved
</span>in {nb_achieved} countries in the WHO region, while it was
<span class = "txt-yellow">re-established</span> in
{nb_reestablished} countries and <span class = "txt-red">
not achieved</span> in {nb_not_achieved} countries.
```
````

## Highlight

:::columns
:::{.column .fragment}
Use :

- <span style="font-size:2em;">size</span>
- <span style="color:#FFAE49;">color</span>
- **weight**

{{< fa arrow-right >}} `<span>...</span>`

:::
:::{.column .fragment}
![](img/big_numbers)

![](img/highlight_text)
:::
:::

# Generate {background-image="img/render.jpg"}

## Render them all

- list of parameters
- `map`
- `quarto_render`
- `fs::file_move`

## Quality insurance

:::fragment
- Check the number of pages !

```{r}
walk(list.files("generated_reports/", full.names = TRUE),
     function(x) {
       pdf_length <- pdftools::pdf_length(x)
       if (pdf_length != 6) {
         print(paste0(x, " reports ERROR"))
       } else{
         print("OK")
       }
     })
```
:::

:::fragment
- Check reports with extreme values :

  - long names
  - outliers in data
  - missing data

:::

# Thanks


